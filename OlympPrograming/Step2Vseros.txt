Code:
ll n, num;
	cin >> n >> num;
	ll pairnum = num / (2 * n + 1) + 1;
	if (num % (2 * n + 1) == 0)
	{
		--pairnum;
	}
	ll row, seat = 0;
	if (num % (2 * n + 1) == 0)
	{
		row = 2 * pairnum;
		seat = n + 1;
		cout << row << " " << seat;
	}
	else
	{
		ll ost = num % (2 * n + 1);
		if (ost <= n)
		{
			cout << 2 * pairnum - 1 << " " << ost;
		}
		else
		{
			cout << 2 * pairnum << " " << ost-n;
		}
	}

	ll x, y;
	cin >> x >> y;
	if ((x + y) % 2)
	{
		cout << -1;
	}
	else
	{
		if (x >= 0 && y >= 0)
		{
			if (x == y)
			{
				cout << 0;
			}
			else if (x > y)
			{
				cout << 1 << "\n";
				ll x1 = x - (x - y) / 2;
				ll y1 = x1;
				cout << x1 << " " << y1 << " " << "H";
			}
			else
			{
				cout << 1 << "\n";
				ll y1 = y - (y - x) / 2;
				ll x1 = y1;
				cout << x1 << " " << y1 << " " << "V";
			}
		}
		else
		{
			if (x == y)
			{
				cout << 3 << "\n";
				cout << 1 << " " << 1 << "H" << "\n";
				cout << 2 << " " << 0 << "V" << "\n";
				cout << x+1 << " " << y-1 << "H" << "\n";
			}
			else
			{
				cout << 2 << "\n";
				if (x > y)
				{
					ll new_x = x - y;
					ll x1 = new_x / 2;
					ll y1 = x1;
					cout << x1 << " " << y1 << " " << "H" <<"\n";
					cout << new_x << " " << 0 << " " << "V" << "\n";
				}
				else
				{
					ll new_y = y-x;
					ll y1 = new_y / 2;
					ll x1 = y1;
					cout << x1 << " " << y1 << " " << "V" << "\n";
					cout << 0 << " " << new_y << " " << "H" << "\n";
				}
			}
		}
	}
	ll n, m;
	cin >> n >> m;
	vi vec1(n);
	vi vec2(m);
	inputvec(vec1);
	inputvec(vec2);
	for (auto elem : vec2)
	{
		vec1.push_back(-elem);
	}
	sort(vec1.begin(), vec1.end());
	if (vec1[vec1.size() / 2] > 0)
	{
		cout << 0;
	}
	else
	{
		cout << abs(vec1[vec1.size() / 2]);
	}